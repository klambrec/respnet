
import file
import xml
import yang.adata
import yang.gdata
import ttt

import respnet.layers
from respnet.layers.y_0 import root as cfs_root

import testing

actor main(env):
    rfcap = file.ReadFileCap(file.FileCap(env.cap))
    if len(env.argv) <= 1:
        print("Usage: %s <filename>" % env.argv[0])
        await async env.exit(1)
    filename = env.argv[1]
    f = file.ReadFile(rfcap, filename)
    nb_input = await async f.read()
    f.close()

    layers = respnet.layers.get_layers()

    # Bootstrap first layer config input
    input_config = cfs_root.from_xml(xml.decode(nb_input.decode()))
    config_in = {"source1": input_config.to_gdata()}

    config_out = {}
    for idx, layer in enumerate(respnet.layers.get_layers()):
        print("Computing layer %d" % idx)
        config_out = {}
        layer.configure(config_in, config_out)
        config_in = config_out
        print("Layer %d config" % idx)

    pieces = list(config_out.values())
    if len(pieces) > 1:
        merged = pieces[0]
        if len(pieces) > 1:
            for piece in pieces[1:]:
                merged = yang.gdata.merge(merged, piece)
        print("Final config")
        print(merged.to_xmlstr())
    else:
        print("No config...")

    env.exit(0)
